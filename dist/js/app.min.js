/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// import * as allfunctions from './modules/functions.js';\n\n\nconst form = document.querySelector('.authentication');\nconst fields = form.querySelectorAll('.field');\nconst errorsInFields = Array.from(fields);\nconst errorsInSpans = document.querySelectorAll('.errorInSpan');\nconst signUpToAccount = document.querySelector('.create-account__sign-up');\nconst questionOfAuthentification = document.querySelector('.create-account__question');\nconst titleOfenterToAccount = document.getElementsByTagName('h1')[0];\nconst buttonOfenterToAccount = document.querySelector('.authentication-button__submit');\nconst repeatPassword = document.querySelector('.authentication-password-second');\nlet arrFocus = []; // for errors\nlet userPassword = null;\n\nsignUpToAccount.addEventListener('click', () => {\n    if (signUpToAccount.innerHTML == 'Sign Up') {\n        signUpToAccount.innerHTML = 'Login';\n        titleOfenterToAccount.innerHTML = 'Sign Up';\n        buttonOfenterToAccount.value = 'Create an account';\n        questionOfAuthentification.innerHTML = 'Already have an account?';\n        repeatPassword.className = 'authentication-password-second--active';\n    } else {\n        signUpToAccount.innerHTML = 'Sign Up';\n        titleOfenterToAccount.innerHTML = 'Login';\n        buttonOfenterToAccount.value = 'Login to your account';\n        questionOfAuthentification.innerHTML = 'Donâ€™t have an account?';\n        repeatPassword.className = 'authentication-password-second';\n    }\n});\n\nform.addEventListener('submit', () => {\n    arrFocus.length = 0;\n    let caughtErrorsInSpans = Array.from(errorsInSpans);\n    let errors = form.querySelectorAll('.error');\n    let caughtErrors = Array.from(errors);\n    for (let i = 0; i < caughtErrors.length; i++) {\n        if (!errorsInFields[i].value) {\n            caughtErrors[i].innerHTML = 'empty field';\n            arrFocus.push(errorsInFields[i]);\n        } else if (caughtErrorsInSpans[i].innerHTML) {\n            arrFocus.push(errorsInFields[i]);\n        }\n    }\n\n\n})\n\nfunction borderRedColor (el, color) {\n    el.style.borderColor = color;\n};\n\n\nerrorsInFields.forEach((v) => {\n    v.onblur = () => {\n        if (v.type === 'email') {\n            let error = document.querySelector('.emailSpan');\n            if (!(v.value)) {\n                error.innerHTML = 'empty field';\n                borderRedColor(v, '#FC4747');\n            } else if (!v.value.endsWith('@gmail.com')) {\n                error.innerHTML = 'Please, add gmail.com!';\n                borderRedColor(v, '#FC4747');\n            } else {\n                error.innerHTML = '';\n                borderRedColor(v, '#5A698F');\n            }\n        }\n        if(v.placeholder === 'Password'){\n            let error = document.querySelector('.firstPasswordSpan');\n            if (!(v.value)) {\n                error.innerHTML = 'empty field';\n                borderRedColor(v, '#FC4747');\n            }  else if (v.value.length < 8) {\n                error.innerHTML = 'min 8 symbols';\n                borderRedColor(v, '#FC4747');\n            } else {\n                error.innerHTML = '';\n                borderRedColor(v, '#5A698F');\n            }  \n        }\n        if(v.placeholder === 'Repeat password') {\n            let error = document.querySelector('.secondPasswordSpan');\n            let userPassword = document.getElementById('userPassword');\n            if (!(v.value)) {\n                error.innerHTML = 'empty field';\n                borderRedColor(v, '#FC4747');\n            } else if (userPassword.value != v.value) {\n                error.innerHTML = 'check your password';\n                borderRedColor(v, '#FC4747');\n            } else {\n                error.innerHTML = '';\n                borderRedColor(v, '#5A698F');\n            }  \n        }\n    }\n})\n\n//# sourceURL=webpack://gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;